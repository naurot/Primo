/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package my.contacteditor;

/**
 *
 * @author 14107
 */
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JList;

public class RecipeMaker extends javax.swing.JFrame {

    Metodos metodos = new Metodos();

    static int dishID = -1;
    static int ingListIdx = -1;

    final String[][] unit = {{"each", "dozen"},
    {"dash", "tsp", "Tbs", "ounce", "cup", "lb"},
    {"splash", "tsp", "Tbs", "ounce", "cup", "pint", "quart", "gal"}};
    String[] units = unit[0];

    /**
     * Creates new form RecipeMaker
     */
    public RecipeMaker() {
        initComponents();
        clearFieldsForIng();
    }

    /* This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        DishCatBtnGroup = new javax.swing.ButtonGroup();
        recipeCRUDBtnGroup = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        recipeNameTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        numServingsTextField = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        breakMealBtn = new javax.swing.JRadioButton();
        lunchMealBtn = new javax.swing.JRadioButton();
        dinnerMealBtn = new javax.swing.JRadioButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        appCatBtn = new javax.swing.JRadioButton();
        sideCatBtn = new javax.swing.JRadioButton();
        entreeCatBtn = new javax.swing.JRadioButton();
        dessertCatBtn = new javax.swing.JRadioButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        cancelRecipeIngAll = new javax.swing.JButton();
        submitRecipeIng = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        acceptedIngList = new javax.swing.JList<>();
        jPanel10 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        ingOrDishList = new javax.swing.JList<>();
        jPanel9 = new javax.swing.JPanel();
        ingRecipeLabel = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        addIngSingle = new javax.swing.JButton();
        cancelIngSingle = new javax.swing.JButton();
        ingMeasureCombo = new javax.swing.JComboBox<>();
        ingredientRecipeTextBox = new javax.swing.JTextField();
        ingQuantityTextField = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        createRecipeBtn = new javax.swing.JRadioButton();
        updateRecipeBtn = new javax.swing.JRadioButton();
        delRadioBtn = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Recipe Maker");
        setResizable(false);

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Recipe Name");

        recipeNameTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        recipeNameTextField.setToolTipText("enter name");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setText("Servings");

        numServingsTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        numServingsTextField.setToolTipText("number of servings");
        numServingsTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                numServingsTextFieldKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(recipeNameTextField)
                    .addComponent(numServingsTextField))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(recipeNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(numServingsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Meal");

        breakMealBtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        breakMealBtn.setText("Breakfast");

        lunchMealBtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lunchMealBtn.setText("Lunch");

        dinnerMealBtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        dinnerMealBtn.setText("Dinner");
        dinnerMealBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dinnerMealBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dinnerMealBtn)
                    .addComponent(lunchMealBtn)
                    .addComponent(breakMealBtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(breakMealBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lunchMealBtn)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dinnerMealBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Category");

        DishCatBtnGroup.add(appCatBtn);
        appCatBtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        appCatBtn.setText("Appetizer");

        DishCatBtnGroup.add(sideCatBtn);
        sideCatBtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        sideCatBtn.setText("Side Dish");

        DishCatBtnGroup.add(entreeCatBtn);
        entreeCatBtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        entreeCatBtn.setText("Entree");

        DishCatBtnGroup.add(dessertCatBtn);
        dessertCatBtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        dessertCatBtn.setText("Dessert");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dessertCatBtn)
                    .addComponent(entreeCatBtn)
                    .addComponent(sideCatBtn)
                    .addComponent(appCatBtn))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(appCatBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sideCatBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(entreeCatBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dessertCatBtn)
                .addContainerGap(11, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("Ingredients");

        cancelRecipeIngAll.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cancelRecipeIngAll.setText("Cancel");
        cancelRecipeIngAll.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelRecipeIngAllMouseClicked(evt);
            }
        });
        cancelRecipeIngAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelRecipeIngAllActionPerformed(evt);
            }
        });

        submitRecipeIng.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        submitRecipeIng.setText("Submit");
        submitRecipeIng.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                submitRecipeIngMouseClicked(evt);
            }
        });

        acceptedIngList.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        acceptedIngList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        acceptedIngList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                acceptedIngListMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(acceptedIngList);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(cancelRecipeIngAll)
                        .addGap(76, 76, 76)
                        .addComponent(submitRecipeIng))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelRecipeIngAll)
                    .addComponent(submitRecipeIng))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        ingOrDishList.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        ingOrDishList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        ingOrDishList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ingOrDishListMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(ingOrDishList);

        ingRecipeLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        ingRecipeLabel.setText("Ingredients");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ingRecipeLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ingRecipeLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 463, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel7.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jPanel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel7MouseClicked(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setText("Ingredient");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel6.setText("Quantity");

        addIngSingle.setText("Add");
        addIngSingle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addIngSingleMouseClicked(evt);
            }
        });
        addIngSingle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addIngSingleActionPerformed(evt);
            }
        });

        cancelIngSingle.setText("Cancel");
        cancelIngSingle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelIngSingleMouseClicked(evt);
            }
        });
        cancelIngSingle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelIngSingleActionPerformed(evt);
            }
        });

        ingMeasureCombo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ingMeasureCombo.setModel(new javax.swing.DefaultComboBoxModel<>(units));
        ingMeasureCombo.setToolTipText("Unit of Measure");
        ingMeasureCombo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ingMeasureComboMouseClicked(evt);
            }
        });

        ingredientRecipeTextBox.setEditable(false);
        ingredientRecipeTextBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        ingQuantityTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ingQuantityTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        ingQuantityTextField.setText(" ");
        ingQuantityTextField.setToolTipText("amount");
        ingQuantityTextField.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                ingQuantityTextFieldInputMethodTextChanged(evt);
            }
        });
        ingQuantityTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ingQuantityTextFieldKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cancelIngSingle)
                            .addComponent(ingQuantityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(ingMeasureCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addIngSingle))
                        .addGap(0, 121, Short.MAX_VALUE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ingredientRecipeTextBox)
                        .addContainerGap())))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ingredientRecipeTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(ingMeasureCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ingQuantityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addIngSingle)
                    .addComponent(cancelIngSingle))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel8.setText("Recipe");

        recipeCRUDBtnGroup.add(createRecipeBtn);
        createRecipeBtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        createRecipeBtn.setSelected(true);
        createRecipeBtn.setText("Create");
        createRecipeBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                createRecipeBtnMouseClicked(evt);
            }
        });
        createRecipeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createRecipeBtnActionPerformed(evt);
            }
        });

        recipeCRUDBtnGroup.add(updateRecipeBtn);
        updateRecipeBtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        updateRecipeBtn.setText("Update");
        updateRecipeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateRecipeBtnActionPerformed(evt);
            }
        });

        recipeCRUDBtnGroup.add(delRadioBtn);
        delRadioBtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        delRadioBtn.setText("Delete");
        delRadioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delRadioBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(delRadioBtn)
                    .addComponent(updateRecipeBtn)
                    .addComponent(createRecipeBtn))
                .addGap(44, 44, 44))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(createRecipeBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(updateRecipeBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(delRadioBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton1.setText("Logout");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jButton1))
                            .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1)))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(44, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 7, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelRecipeIngAllMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelRecipeIngAllMouseClicked
        // clicked cancel button under ingredients
        //if create - clear ingredients
        //   update - clear inedients and reload update page
        //   delete - do nothing
        if (createRecipeBtn.isSelected()) {
            clearFieldsForIng();
        }
        if (updateRecipeBtn.isSelected()) {
            clearFieldsForDish();
            updateRecipeBtn.doClick(50);
        }
    }//GEN-LAST:event_cancelRecipeIngAllMouseClicked

    private void submitRecipeIngMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_submitRecipeIngMouseClicked
        // submit clicked. if update recipe => update, create recipe -> create, delete -> nothing
        if (!recipeNameTextField.getText().isEmpty() && !numServingsTextField.getText().isEmpty() && !usedIngList.isEmpty() && !delRadioBtn.isSelected()) {
            // metodos
            // if create -> create dish, then create consists_of
            //    update -> update consists_of (update dish too???)
            // and whart's the query for this???
            DishType newRecipe = new DishType();
            newRecipe.id = getDishID();
            newRecipe.name = recipeNameTextField.getText();
            newRecipe.numServings = Integer.parseInt(numServingsTextField.getText());
            newRecipe.dishType = getDishType();
            newRecipe.mealType = getMealType();
            if (createRecipeBtn.isSelected()) {
                metodos.createRecipe(newRecipe, usedIngList);
                clearFieldsForDish();
                clearFieldsForIng();
            } else if (updateRecipeBtn.isSelected()) {
                metodos.updateRecipe(newRecipe, usedIngList);
                clearFieldsForIng();
                clearFieldsForDish();
            } else {
                System.out.println("Submit clicked. something you didn't expect");
            }
        }
    }//GEN-LAST:event_submitRecipeIngMouseClicked

    private void updateRecipeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateRecipeBtnActionPerformed
        // Update Recipe radio button selected
        clearFieldsForDish();
    }//GEN-LAST:event_updateRecipeBtnActionPerformed

    private void delRadioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delRadioBtnActionPerformed
        // Delete Recipe radio button selected
        clearFieldsForDish();
    }//GEN-LAST:event_delRadioBtnActionPerformed

    private void createRecipeBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_createRecipeBtnMouseClicked
        // TODO add your handling code here:
        ingRecipeLabel.setText("Ingredients");
    }//GEN-LAST:event_createRecipeBtnMouseClicked

    private void createRecipeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createRecipeBtnActionPerformed
        // TODO add your handling code here:
        clearFieldsForIng();
    }//GEN-LAST:event_createRecipeBtnActionPerformed

    private void ingOrDishListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ingOrDishListMouseClicked
        // in RecipeMaker, item form jList1 clicked
        if (ingredientRecipeTextBox.getText().isEmpty()) {
            if (createRecipeBtn.isSelected()) {
                //creating new recipe; selected ingredient; put ingredient in edit box
                setIngListIdx(ingOrDishList.getSelectedIndex());
                units = unit[ingredientList.get(getIngListIdx()).type];
                ingMeasureCombo.setModel(new javax.swing.DefaultComboBoxModel<>(units));
                System.out.println("Editing: " + ingredientList.get(getIngListIdx()).name);
                String selectedItem = ingOrDishList.getSelectedValue();
                //if the ingredient is already in accepted list,
                //    remove it and place all parameters in edit box
                int i;
                int j = -1;
                for (i = 0; i < usedIngList.size(); i++) {
                    if (usedIngList.get(i).name.equals(selectedItem)) {
                        ingQuantityTextField.setText(usedIngList.get(i).amount);
                        ingMeasureCombo.setSelectedItem(usedIngList.get(i).units);
                        j = i;
                    }
                }
                ingredientRecipeTextBox.setText(selectedItem);
                if (j != -1) {
                    usedIngList.remove(j);
                    acceptedIngModel.clear();
                    for (UsedIngredientType ing : usedIngList) {
                        acceptedIngModel.addElement(ing.toString());
                    }
                    acceptedIngList.setModel(acceptedIngModel);
                }
            } else if (delRadioBtn.isSelected()) {
                //delete recipe
                //  delete all ingredients from consists_of table
                //  delete dish from dish table

                System.out.println("Deleted: " + ingOrDishList.getSelectedValue());
                System.out.println("Deleting: " + dishList.get(ingOrDishList.getSelectedIndex()).name);
                metodos.deleteDish(dishList.get(ingOrDishList.getSelectedIndex()).id);
                clearFieldsForDish();
                delRadioBtn.doClick(50);
            } else if (ingRecipeLabel.getText().equals("Recipes")) {
                //updating a recipe
                int index = ingOrDishList.getSelectedIndex();
                setDishID(dishList.get(index).id);
                recipeNameTextField.setText(dishList.get(index).name); //put the recipe name in recipe box
                numServingsTextField.setText("" + dishList.get(index).numServings);
                int meal = dishList.get(index).mealType;
                breakMealBtn.setSelected((meal ^ 1) <= meal);
                lunchMealBtn.setSelected((meal ^ 2) <= meal);
                dinnerMealBtn.setSelected((meal ^ 4) <= meal);
                switch (dishList.get(index).dishType) {
                    case 1 ->
                        appCatBtn.setSelected(true);
                    case 2 ->
                        sideCatBtn.setSelected(true);
                    case 3 ->
                        entreeCatBtn.setSelected(true);
                    case 4 ->
                        dessertCatBtn.setSelected(true);
                    default ->
                        System.out.println("problem with Cat case");
                }
                ingRecipeLabel.setText("Ingredients");
                ingredientRecipeTextBox.setText("");
                ingOrDishList.setModel(ingModel);
//                String query = "SELECT * FROM Ingredient WHERE ID IN (SELECT Ingredient_ID FROM consists_of WHERE Dish_ID = " + dishList.get(index).id + ") ORDER BY Name";
                String query = "SELECT * FROM Ingredient I, Consists_of C WHERE I.ID = C.Ingredient_ID AND C.Dish_ID=" + dishList.get(index).id + " ORDER BY I.Name";
                usedIngList = metodos.fillDataList(new UsedIngredientType(), query);
                for (UsedIngredientType ing : usedIngList) {
                    acceptedIngModel.addElement(ing.toString());
                }
                acceptedIngList.setModel(acceptedIngModel);
            } else {
                System.out.println("Updating recipe, selecting from ingredient list");
                setIngListIdx(ingOrDishList.getSelectedIndex());
                units = unit[ingredientList.get(getIngListIdx()).type];
                ingMeasureCombo.setModel(new javax.swing.DefaultComboBoxModel<>(units));
                ingredientRecipeTextBox.setText(ingOrDishList.getSelectedValue());
                System.out.println("Editing: " + ingredientList.get(ingOrDishList.getSelectedIndex()).name);
                String selectedItem = ingOrDishList.getSelectedValue();
                int i;
                int j = -1;
                for (i = 0; i < usedIngList.size(); i++) {
                    if (usedIngList.get(i).name.equals(selectedItem)) {
                        ingQuantityTextField.setText(usedIngList.get(i).amount);
                        ingMeasureCombo.setSelectedItem(usedIngList.get(i).units);
                        j = i;
                    }
                }
//                ingredientRecipeTextBox.setText(selectedItem);
                if (j != -1) {
                    usedIngList.remove(j);
                    acceptedIngModel.clear();
                    for (UsedIngredientType ing : usedIngList) {
                        acceptedIngModel.addElement(ing.toString());
                    }
                    acceptedIngList.setModel(acceptedIngModel);
                }
            }
        }
        //put nothing here
    }//GEN-LAST:event_ingOrDishListMouseClicked

    private void ingMeasureComboMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ingMeasureComboMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_ingMeasureComboMouseClicked

    private void cancelIngSingleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelIngSingleActionPerformed
        // in RecipeMaker, creating recipe, cancelled ingredient, reset values
        ingredientRecipeTextBox.setText("");
        ingQuantityTextField.setText("");
        ingMeasureCombo.setSelectedIndex(0);
    }//GEN-LAST:event_cancelIngSingleActionPerformed

    private void cancelIngSingleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelIngSingleMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_cancelIngSingleMouseClicked

    private void addIngSingleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addIngSingleActionPerformed
        // move ingredient from edit box to ingredient list of (new recipe || updated recipe)
        if (!ingredientRecipeTextBox.getText().equals("")
                && !(ingQuantityTextField.getText().equals("") || (Float.parseFloat(ingQuantityTextField.getText()) < 0.001))) {
//            String ing = ingredientRecipeTextBox.getText();
            String amount = ingQuantityTextField.getText();
            int units = ingMeasureCombo.getSelectedIndex();
            usedTmp = new UsedIngredientType(ingredientList.get(getIngListIdx()), amount, units);
            setIngListIdx(-1);
            usedIngList.add(usedTmp);
            acceptedIngModel.addElement(amount + " " + unit[usedTmp.type][units] + "      " + usedTmp.name);
            acceptedIngList.setModel(acceptedIngModel);
            ingredientRecipeTextBox.setText("");
            ingQuantityTextField.setText("");
            ingMeasureCombo.setSelectedIndex(0);
            //move ingredient to jList2
        }
    }//GEN-LAST:event_addIngSingleActionPerformed

    private void addIngSingleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addIngSingleMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_addIngSingleMouseClicked

    private void cancelRecipeIngAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelRecipeIngAllActionPerformed
        // Cancel button pressed in jlist2
        clearFields();
    }//GEN-LAST:event_cancelRecipeIngAllActionPerformed

    private void jPanel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel7MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel7MouseClicked

    private void acceptedIngListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_acceptedIngListMouseClicked
        // clicked on an ingredient in accepted ingredient list
        //edit it
        int index = acceptedIngList.getSelectedIndex();

        if (ingredientRecipeTextBox.getText().isEmpty() && index >= 0) {

            UsedIngredientType tmp = usedIngList.get(index);
            //??
                            units = unit[tmp.type];
                ingMeasureCombo.setModel(new javax.swing.DefaultComboBoxModel<>(units));
                ingMeasureCombo.setSelectedIndex(tmp.units);
                //??
            for (int i = 0; i < ingredientList.size(); i++) {
                IngredientType ing = ingredientList.get(i);
                if (ing.id == tmp.id && ing.brandID == tmp.brandID && ing.brandName.equals(tmp.brandName)) {
                    setIngListIdx(i);
                    i = ingredientList.size();
                }
            }

            ingredientRecipeTextBox.setText(tmp.name);
            ingQuantityTextField.setText(tmp.amount);
            ingMeasureCombo.setSelectedItem(tmp.units);
            usedIngList.remove(index);
            acceptedIngModel.clear();
            for (UsedIngredientType ing : usedIngList) {
                acceptedIngModel.addElement(ing.toString());
            }
            acceptedIngList.setModel(acceptedIngModel);
        }
    }//GEN-LAST:event_acceptedIngListMouseClicked

    private void numServingsTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numServingsTextFieldKeyTyped
        // TODO add your handling code here:
        try {
            Integer.parseInt(numServingsTextField.getText());
        } catch (Exception e) {
            numServingsTextField.setText("");
            System.out.println("Must be an integer:" + e);
        }
    }//GEN-LAST:event_numServingsTextFieldKeyTyped

    private void dinnerMealBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dinnerMealBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dinnerMealBtnActionPerformed

    private void ingQuantityTextFieldInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_ingQuantityTextFieldInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_ingQuantityTextFieldInputMethodTextChanged

    private void ingQuantityTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingQuantityTextFieldKeyTyped
        // TODO add your handling code here:
        try {
            Float.parseFloat(ingQuantityTextField.getText());

        } catch (Exception e) {
            ingQuantityTextField.setText("");
            System.out.println("Must be an integer:" + e);
        }
    }//GEN-LAST:event_ingQuantityTextFieldKeyTyped

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // mouse clicked logout
        LoginUI loginUI = new LoginUI();
        loginUI.setVisible(true);
        setVisible(false);
        dispose();
    }//GEN-LAST:event_jButton1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RecipeMaker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RecipeMaker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RecipeMaker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RecipeMaker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RecipeMaker().setVisible(true);
            }
        });
    }
    public static DefaultListModel ingModel = new DefaultListModel();
    public static DefaultListModel acceptedIngModel = new DefaultListModel();
    public static DefaultListModel dishModel = new DefaultListModel();
    static ArrayList<IngredientType> ingredientList = new ArrayList<>();
    static ArrayList<UsedIngredientType> usedIngList = new ArrayList<>();
    static ArrayList<DishType> dishList = new ArrayList<>();
    static UsedIngredientType usedTmp;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup DishCatBtnGroup;
    private javax.swing.JList<String> acceptedIngList;
    private javax.swing.JButton addIngSingle;
    private javax.swing.JRadioButton appCatBtn;
    private javax.swing.JRadioButton breakMealBtn;
    private javax.swing.JButton cancelIngSingle;
    private javax.swing.JButton cancelRecipeIngAll;
    private javax.swing.JRadioButton createRecipeBtn;
    private javax.swing.JRadioButton delRadioBtn;
    private javax.swing.JRadioButton dessertCatBtn;
    private javax.swing.JRadioButton dinnerMealBtn;
    private javax.swing.JRadioButton entreeCatBtn;
    private javax.swing.JComboBox<String> ingMeasureCombo;
    private javax.swing.JList<String> ingOrDishList;
    private javax.swing.JTextField ingQuantityTextField;
    private javax.swing.JLabel ingRecipeLabel;
    private javax.swing.JTextField ingredientRecipeTextBox;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JRadioButton lunchMealBtn;
    private javax.swing.JTextField numServingsTextField;
    private javax.swing.ButtonGroup recipeCRUDBtnGroup;
    private javax.swing.JTextField recipeNameTextField;
    private javax.swing.JRadioButton sideCatBtn;
    private javax.swing.JButton submitRecipeIng;
    private javax.swing.JRadioButton updateRecipeBtn;
    // End of variables declaration//GEN-END:variables

    private void clearFields() {
        setDishID(-1);
        setIngListIdx(-1);
        recipeNameTextField.setText("");
        numServingsTextField.setText("");
        breakMealBtn.setSelected(true);
        appCatBtn.setSelected(true);
        lunchMealBtn.setSelected(false);
        dinnerMealBtn.setSelected(false);
        sideCatBtn.setSelected(false);
        entreeCatBtn.setSelected(false);
        dessertCatBtn.setSelected(false);
        ingredientRecipeTextBox.setText("");
        ingQuantityTextField.setText("");
        ingMeasureCombo.setSelectedIndex(0);
        usedIngList.clear();
        acceptedIngModel.clear();
        acceptedIngList.setModel(acceptedIngModel);
    }

    private void clearFieldsForIng() {
        clearFields();
        ingModel.clear();
        ingRecipeLabel.setText("Ingredients");
        ingredientList = metodos.fillDataList(new IngredientType(), "select * from ingredient ORDER BY Name");
        for (IngredientType ing : ingredientList) {
            ingModel.addElement(ing.brandName.equals("Generic") ? ing.name : ing.brandName);
        }
        ingOrDishList.setModel(ingModel);
    }

    private void clearFieldsForDish() {
        clearFields();
        dishModel.clear();
        ingRecipeLabel.setText("Recipes");
        dishList = metodos.fillDataList(new DishType(), "select * from dish ORDER BY Name");
        for (DishType dish : dishList) {
            dishModel.addElement(dish.name);
        }
        ingOrDishList.setModel(dishModel);
    }

    public int getDishType() {
        if (appCatBtn.isSelected()) {
            return 1;
        }
        if (sideCatBtn.isSelected()) {
            return 2;
        }
        if (entreeCatBtn.isSelected()) {
            return 3;
        }
        if (dessertCatBtn.isSelected()) {
            return 4;
        }
        return 0;
    }

    public int getMealType() {
        int retValue = 0;
        retValue = retValue + (breakMealBtn.isSelected() ? 1 : 0);
        retValue = retValue + (lunchMealBtn.isSelected() ? 2 : 0);
        retValue = retValue + (dinnerMealBtn.isSelected() ? 4 : 0);
        return retValue;
    }

    public static void setDishID(int id) {
        dishID = id;
    }

    public static int getDishID() {
        return dishID;
    }

    public static void setIngListIdx(int index) {
        ingListIdx = index;
    }

    public static int getIngListIdx() {
        return ingListIdx;
    }

    private boolean allFieldsValidated() {
//check recipe has a name
//                   numServings
//                   mealType
//                   dishType
//                   at least one ingredient
        System.out.println("Not yet implemented");
        return true;
    }
}
